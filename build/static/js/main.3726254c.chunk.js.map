{"version":3,"sources":["components/singleElimBracket.js","components/displayBracket.js","components/registrationForm.js","views/displayRegForm.js","App.js","serviceWorker.js","index.js"],"names":["Duel","require","players","1","2","3","4","5","6","7","8","trn","last","LB","DisplayBracket","props","useState","player1","setPlayer1","player2","setPlayer2","matches","map","match","index","score","i","state","length","JSON","stringify","id","s","className","r","m","p","style","color","toString","trigger","position","modal","closeOnDocumentClick","close","onSubmit","event","matchID","preventDefault","console","log","Number","type","name","onChange","e","target","value","onClick","playerCount","short","SingleElimDisplayBracket","regForm","displayRegForm","App","path","default","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3726254c.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Popup from 'reactjs-popup';\nconst Duel = require('duel')\n\n// make an api call for this\nconst players = {\n    1: \"Tokido\",\n    2: \"Daigo\",\n    3: \"Infiltration\",\n    4: \"TrickCards\",\n    5: \"Mango\",\n    6: \"Leffen\",\n    7: \"Justin Wong\",\n    8: \"Alex Valle\"\n}\n\nvar playerCount = 0;\nconst registeredPlayers = 8;\n\nfor (var i = 1; i <= registeredPlayers; i++){\n    playerCount ++;\n}\n\n\nvar trn = new Duel(playerCount, {short:true})\nconsole.log(trn)\n\n\n\n// this bracket is for single elimination\n\nconst SingleElimDisplayBracket = props => {\n    \n    const [player1, setPlayer1] = useState(null);\n    const [player2, setPlayer2] = useState(null);\n    \n    //on submit, send id of match and score for each player\n    const onSubmit = (event, matchID, player1, player2) => {\n        event.preventDefault();\n        trn.score(matchID, [player1, player2]);\n        console.log(trn)\n    }\n\n\n    return( \n        <div className = \"bracketDisplayContainer\">\n            <h3>Bracket :</h3>\n            <div className = \"bracketMatches\">\n\n            <div className = {\"all_round_1\"}>\n            {trn.matches.map((match, index) => {\n                var score = [null, null]\n                for(var i = 0; i < trn.state.length; i++){\n                    if(JSON.stringify(match.id) === JSON.stringify(trn.state[i].id)){\n                        score=trn.state[i].score;\n                        break;\n                    }\n                }\n                return (\n                    <>\n                        {match.id.r === 1 ? \n                            <div className = {\"round1 \" + \"match\" + match.id.m} key ={\"1\" + index}>\n                            Match #{match.id.s}{match.id.r}{match.id.m}\n                            <br/>\n    \n                            {/* Player 1 */}\n    \n                            {match.p[0] <= 0 ? \n                                (match.id.r-1) <= 0 ? \n                                    <span style={{color:\"grey\"}}>BYE</span> \n                                    : \n                                    <span style={{color:\"grey\"}}> winner of #{match.id.s.toString()}{(match.id.r - 1).toString()}{((match.id.m + (match.id.m -1))).toString()} </span> \n                            : \n                                score[1]===score[0] ? \n                                    <span style = {{color: \"\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span> \n                                    : \n                                    score[0]<score[1] ? \n                                        <span style = {{color: \"red\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span> \n                                        : \n                                        <span style = {{color: \"green\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span>}\n                            <br/>\n    \n                            <hr></hr>\n                            \n                            {/* Player 2 */}\n    \n                            {match.p[1] <= 0 ? \n                                (match.id.r-1) <= 0 ? \n                                    <span style={{color:\"grey\"}}>BYE</span> \n                                    : \n                                    <span style={{color:\"grey\"}}> winner of #{match.id.s.toString()}{(match.id.r - 1).toString()}{(match.id.m + (match.id.m)).toString()} </span> \n                            : \n                                score[1]===score[0] ?\n                                    <div>\n                                    <span style = {{color: \"\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>\n                                    <br/>\n                                    <Popup trigger = {<button>Enter Score</button>} position = \"top center\" modal closeOnDocumentClick>\n                                        {close =>(\n                                            <>\n                                            <form onSubmit = {(event) => {onSubmit(event, match.id, Number(player1), Number(player2)); close()}}>\n                                                <div style ={{color:\"black\"}} className=\"header\">Enter Score for match #{match.id.s}{match.id.r}{match.id.m}</div>\n                                                <label style ={{color:\"black\"}}># {match.p[0]} {players[match.p[0]]} : </label>\n                                                <input type = \"number\" name = \"player1\" onChange={(e) => { setPlayer1(e.target.value) }}></input>\n                                                <br></br>\n                                                <label style ={{color:\"black\"}}># {match.p[1]} {players[match.p[1]]} : </label>\n                                                <input type = \"number\" name = \"player2\" onChange={(e) => { setPlayer2(e.target.value) }}></input>\n                                                <br></br>\n                                                <button>Submit</button>\n                                            </form>\n                                            <button onClick = {close}>Cancel</button>\n                                            </>\n                                        )}\n                                        \n                                    </Popup>\n                                    </div>\n                                    : \n                                    score[1]<score[0] ? \n                                        <span style = {{color: \"red\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>\n                                        : \n                                        <span style = {{color: \"green\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>}\n                            \n                        </div>\n\n                        :\n\n                        null\n                    }\n                    </>\n                )\n            })}\n            </div>\n\n\n            <div className = {\"all_round_2\"}>\n            {trn.matches.map((match, index) => {\n                var score = [null, null]\n                for(var i = 0; i < trn.state.length; i++){\n                    if(JSON.stringify(match.id) === JSON.stringify(trn.state[i].id)){\n                        score=trn.state[i].score;\n                        break;\n                    }\n                }\n                return (\n                    <>\n                        {match.id.r === 2 ? \n                            <div className = {\"round2 \" + \"match\" + match.id.m} key ={\"2\" + index}>\n                            Match #{match.id.s}{match.id.r}{match.id.m}\n                            <br/>\n    \n                            {/* Player 1 */}\n    \n                            {match.p[0] <= 0 ? \n                                (match.id.r-1) <= 0 ? \n                                    <span style={{color:\"grey\"}}>BYE</span> \n                                    : \n                                    <span style={{color:\"grey\"}}> winner of #{match.id.s.toString()}{(match.id.r - 1).toString()}{((match.id.m + (match.id.m -1))).toString()} </span> \n                            : \n                                score[1]===score[0] ? \n                                    <span style = {{color: \"\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span> \n                                    : \n                                    score[0]<score[1] ? \n                                        <span style = {{color: \"red\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span> \n                                        : \n                                        <span style = {{color: \"green\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span>}\n                            <br/>\n    \n                            <hr></hr>\n                            \n                            {/* Player 2 */}\n    \n                            {match.p[1] <= 0 ? \n                                (match.id.r-1) <= 0 ? \n                                    <span style={{color:\"grey\"}}>BYE</span> \n                                    : \n                                    <span style={{color:\"grey\"}}> winner of #{match.id.s.toString()}{(match.id.r - 1).toString()}{(match.id.m + (match.id.m)).toString()} </span> \n                            : \n                                score[1]===score[0] ?\n                                    <div>\n                                    <span style = {{color: \"\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>\n                                    <br/>\n                                    <Popup trigger = {<button>Enter Score</button>} position = \"top center\" modal closeOnDocumentClick>\n                                        {close =>(\n                                            <>\n                                            <form onSubmit = {(event) => {onSubmit(event, match.id, Number(player1), Number(player2)); close()}}>\n                                                <div style ={{color:\"black\"}} className=\"header\">Enter Score for match #{match.id.s}{match.id.r}{match.id.m}</div>\n                                                <label style ={{color:\"black\"}}># {match.p[0]} {players[match.p[0]]} : </label>\n                                                <input type = \"number\" name = \"player1\" onChange={(e) => { setPlayer1(e.target.value) }}></input>\n                                                <br></br>\n                                                <label style ={{color:\"black\"}}># {match.p[1]} {players[match.p[1]]} : </label>\n                                                <input type = \"number\" name = \"player2\" onChange={(e) => { setPlayer2(e.target.value) }}></input>\n                                                <br></br>\n                                                <button>Submit</button>\n                                            </form>\n                                            <button onClick = {close}>Cancel</button>\n                                            </>\n                                        )}\n                                        \n                                    </Popup>\n                                    </div>\n                                    : \n                                    score[1]<score[0] ? \n                                        <span style = {{color: \"red\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>\n                                        : \n                                        <span style = {{color: \"green\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>}\n                            \n                        </div>\n\n                        :\n\n                        null\n                    }\n                    </>\n                )\n            })}\n            </div>\n\n\n            <div className = {\"all_round_3\"}>\n            {trn.matches.map((match, index) => {\n                var score = [null, null]\n                for(var i = 0; i < trn.state.length; i++){\n                    if(JSON.stringify(match.id) === JSON.stringify(trn.state[i].id)){\n                        score=trn.state[i].score;\n                        break;\n                    }\n                }\n                return (\n                    <>\n                        {match.id.r === 3 ? \n                            <div className = {\"round3 \" + \"match\" + match.id.m} key ={\"3\" + index}>\n                            Match #{match.id.s}{match.id.r}{match.id.m}\n                            <br/>\n    \n                            {/* Player 1 */}\n    \n                            {match.p[0] <= 0 ? \n                                (match.id.r-1) <= 0 ? \n                                    <span style={{color:\"grey\"}}>BYE</span> \n                                    : \n                                    <span style={{color:\"grey\"}}> winner of #{match.id.s.toString()}{(match.id.r - 1).toString()}{((match.id.m + (match.id.m -1))).toString()} </span> \n                            : \n                                score[1]===score[0] ? \n                                    <span style = {{color: \"\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span> \n                                    : \n                                    score[0]<score[1] ? \n                                        <span style = {{color: \"red\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span> \n                                        : \n                                        <span style = {{color: \"green\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span>}\n                            <br/>\n    \n                            <hr></hr>\n                            \n                            {/* Player 2 */}\n    \n                            {match.p[1] <= 0 ? \n                                (match.id.r-1) <= 0 ? \n                                    <span style={{color:\"grey\"}}>BYE</span> \n                                    : \n                                    <span style={{color:\"grey\"}}> winner of #{match.id.s.toString()}{(match.id.r - 1).toString()}{(match.id.m + (match.id.m)).toString()} </span> \n                            : \n                                score[1]===score[0] ?\n                                    <div>\n                                    <span style = {{color: \"\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>\n                                    <br/>\n                                    <Popup trigger = {<button>Enter Score</button>} position = \"top center\" modal closeOnDocumentClick>\n                                        {close =>(\n                                            <>\n                                            <form onSubmit = {(event) => {onSubmit(event, match.id, Number(player1), Number(player2)); close()}}>\n                                                <div style ={{color:\"black\"}} className=\"header\">Enter Score for match #{match.id.s}{match.id.r}{match.id.m}</div>\n                                                <label style ={{color:\"black\"}}># {match.p[0]} {players[match.p[0]]} : </label>\n                                                <input type = \"number\" name = \"player1\" onChange={(e) => { setPlayer1(e.target.value) }}></input>\n                                                <br></br>\n                                                <label style ={{color:\"black\"}}># {match.p[1]} {players[match.p[1]]} : </label>\n                                                <input type = \"number\" name = \"player2\" onChange={(e) => { setPlayer2(e.target.value) }}></input>\n                                                <br></br>\n                                                <button>Submit</button>\n                                            </form>\n                                            <button onClick = {close}>Cancel</button>\n                                            </>\n                                        )}\n                                        \n                                    </Popup>\n                                    </div>\n                                    : \n                                    score[1]<score[0] ? \n                                        <span style = {{color: \"red\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>\n                                        : \n                                        <span style = {{color: \"green\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>}\n                            \n                        </div>\n\n                        :\n\n                        null\n                    }\n                    </>\n                )\n            })}\n            </div>\n\n\n            <div className = {\"all_round_4\"}>\n            {trn.matches.map((match, index) => {\n                var score = [null, null]\n                for(var i = 0; i < trn.state.length; i++){\n                    if(JSON.stringify(match.id) === JSON.stringify(trn.state[i].id)){\n                        score=trn.state[i].score;\n                        break;\n                    }\n                }\n                return (\n                    <>\n                        {match.id.r === 4 ? \n                            <div className = {\"round4 \" + \"match\" + match.id.m} key ={\"4\" + index}>\n                            Match #{match.id.s}{match.id.r}{match.id.m}\n                            <br/>\n    \n                            {/* Player 1 */}\n    \n                            {match.p[0] <= 0 ? \n                                (match.id.r-1) <= 0 ? \n                                    <span style={{color:\"grey\"}}>BYE</span> \n                                    : \n                                    <span style={{color:\"grey\"}}> winner of #{match.id.s.toString()}{(match.id.r - 1).toString()}{((match.id.m + (match.id.m -1))).toString()} </span> \n                            : \n                                score[1]===score[0] ? \n                                    <span style = {{color: \"\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span> \n                                    : \n                                    score[0]<score[1] ? \n                                        <span style = {{color: \"red\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span> \n                                        : \n                                        <span style = {{color: \"green\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span>}\n                            <br/>\n    \n                            <hr></hr>\n                            \n                            {/* Player 2 */}\n    \n                            {match.p[1] <= 0 ? \n                                (match.id.r-1) <= 0 ? \n                                    <span style={{color:\"grey\"}}>BYE</span> \n                                    : \n                                    <span style={{color:\"grey\"}}> winner of #{match.id.s.toString()}{(match.id.r - 1).toString()}{(match.id.m + (match.id.m)).toString()} </span> \n                            : \n                                score[1]===score[0] ?\n                                    <div>\n                                    <span style = {{color: \"\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>\n                                    <br/>\n                                    <Popup trigger = {<button>Enter Score</button>} position = \"top center\" modal closeOnDocumentClick>\n                                        {close =>(\n                                            <>\n                                            <form onSubmit = {(event) => {onSubmit(event, match.id, Number(player1), Number(player2)); close()}}>\n                                                <div style ={{color:\"black\"}} className=\"header\">Enter Score for match #{match.id.s}{match.id.r}{match.id.m}</div>\n                                                <label style ={{color:\"black\"}}># {match.p[0]} {players[match.p[0]]} : </label>\n                                                <input type = \"number\" name = \"player1\" onChange={(e) => { setPlayer1(e.target.value) }}></input>\n                                                <br></br>\n                                                <label style ={{color:\"black\"}}># {match.p[1]} {players[match.p[1]]} : </label>\n                                                <input type = \"number\" name = \"player2\" onChange={(e) => { setPlayer2(e.target.value) }}></input>\n                                                <br></br>\n                                                <button>Submit</button>\n                                            </form>\n                                            <button onClick = {close}>Cancel</button>\n                                            </>\n                                        )}\n                                        \n                                    </Popup>\n                                    </div>\n                                    : \n                                    score[1]<score[0] ? \n                                        <span style = {{color: \"red\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>\n                                        : \n                                        <span style = {{color: \"green\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>}\n                            \n                        </div>\n\n                        :\n\n                        null\n                    }\n                    </>\n                )\n            })}\n            </div>\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default SingleElimDisplayBracket","import React, {useState} from 'react';\r\nimport Popup from 'reactjs-popup';\r\nconst Duel = require('duel')\r\n\r\n\r\nconst players = {\r\n    1: \"Tokido\",\r\n    2: \"Daigo\",\r\n    3: \"Infiltration\",\r\n    4: \"TrickCards\",\r\n    5: \"Mango\",\r\n    6: \"Leffen\",\r\n    7: \"Justin Wong\",\r\n    8: \"Alex Valle\"\r\n}\r\n\r\n\r\n\r\n\r\nvar trn = new Duel(8, {last : Duel.LB})\r\n\r\n// console.log(trn)\r\n\r\n\r\n// this bracket is for double elimination\r\n\r\n\r\nconst DisplayBracket = props => {\r\n    \r\n    const [player1, setPlayer1] = useState(null);\r\n    const [player2, setPlayer2] = useState(null);\r\n    \r\n    //on submit, send id of match and score for each player\r\n    const onSubmit = (event, matchID, player1, player2) => {\r\n        event.preventDefault();\r\n        trn.score(matchID, [player1, player2]);\r\n        console.log(trn)\r\n    }\r\n\r\n    return( \r\n        <div>\r\n            <h3>Bracket :</h3>\r\n            <hr/>\r\n            {trn.matches.map((match, index) => {\r\n                var score = [null, null]\r\n                for(var i = 0; i < trn.state.length; i++){\r\n                    if(JSON.stringify(match.id) === JSON.stringify(trn.state[i].id)){\r\n                        score=trn.state[i].score;\r\n                        break;\r\n                    }\r\n                }\r\n                return (\r\n                    match.id.s===1 ?\r\n                    <div className = 'upperB' key ={index}>\r\n                        Upper Bracket Match ID: {match.id.s}{match.id.r}{match.id.m}\r\n                        <br/>\r\n\r\n                        {/* Player 1 */}\r\n\r\n                        {match.p[0] <= 0 ? \r\n                            (match.id.r-1) <= 0 ? \r\n                                <span style={{color:\"grey\"}}>BYE</span> \r\n                                : \r\n                                <span style={{color:\"grey\"}}> winner of match #{match.id.s.toString()}{(match.id.r - 1).toString()}{((match.id.m + (match.id.m -1))).toString()} </span> \r\n                        : \r\n                            score[1]===score[0] ? \r\n                                <span style = {{color: \"\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span> \r\n                                : \r\n                                score[0]<score[1] ? \r\n                                    <span style = {{color: \"red\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span> \r\n                                    : \r\n                                    <span style = {{color: \"green\"}}> #{match.p[0]} {players[match.p[0]]} {score[0]} </span>}\r\n                        <br/>\r\n\r\n                        <span>vs</span>\r\n                        \r\n                        <br/>\r\n\r\n                        {/* Player 2 */}\r\n\r\n                        {match.p[1] <= 0 ? \r\n                            (match.id.r-1) <= 0 ? \r\n                                <span style={{color:\"grey\"}}>BYE</span> \r\n                                : \r\n                                <span style={{color:\"grey\"}}> winner of match #{match.id.s.toString()}{(match.id.r - 1).toString()}{(match.id.m + (match.id.m)).toString()} </span> \r\n                        : \r\n                            score[1]===score[0] ?\r\n                                <div>\r\n                                <span style = {{color: \"\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>\r\n                                <br/>\r\n\r\n                                <Popup trigger = {<button>Enter Score</button>} position = \"top center\" modal closeOnDocumentClick>\r\n                                    {close =>(\r\n                                        <>\r\n                                        <form onSubmit = {(event) => {onSubmit(event, match.id, Number(player1), Number(player2)); close()}}>\r\n                                            <div style ={{color:\"black\"}} className=\"header\">Enter Score for match #{match.id.s}{match.id.r}{match.id.m}</div>\r\n                                            <label style ={{color:\"black\"}}># {match.p[0]} {players[match.p[0]]} : </label>\r\n                                            <input type = \"number\" name = \"player1\" onChange={(e) => { setPlayer1(e.target.value) }}></input>\r\n                                            <br></br>\r\n                                            <label style ={{color:\"black\"}}># {match.p[1]} {players[match.p[1]]} : </label>\r\n                                            <input type = \"number\" name = \"player2\" onChange={(e) => { setPlayer2(e.target.value) }}></input>\r\n                                            <br></br>\r\n                                            <button>Submit</button>\r\n                                        </form>\r\n                                        <button onClick = {close}>Cancel</button>\r\n                                        </>\r\n                                    )}\r\n                                    \r\n                                </Popup>\r\n                                </div>\r\n                                : \r\n                                score[1]<score[0] ? \r\n                                    <span style = {{color: \"red\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>\r\n                                    : \r\n                                    <span style = {{color: \"green\"}}> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>}\r\n                        <hr/>\r\n                    </div>\r\n\r\n                    :\r\n\r\n                    <div className = 'lowerB' key={index}>\r\n                        Lower Bracket Match ID: {match.id.s}{match.id.r}{match.id.m}\r\n                        <br/>\r\n\r\n\r\n                        {/* Player 1 */}\r\n\r\n                        {match.p[0] <= 0 ? \r\n                            (match.id.r <= 1) ? \r\n                                (match.p[0] < 0) ?\r\n                                    <span style={{color:\"grey\"}}> BYE </span>\r\n                                    : \r\n                                    <span style={{color:\"grey\"}}> loser of match # {(match.id.s-1).toString()}{match.id.r}{(match.id.m + (match.id.m) )} </span>\r\n                                :    \r\n                                <span style={{color:\"grey\"}}> loser of match # {(match.id.s-1).toString()}{match.id.r}{(match.id.m + (match.id.m) )} </span>\r\n                            :\r\n                            <span> #{match.p[0]} {players[match.p[0]]} {score[0]} </span>\r\n                        }\r\n                        \r\n                        <br/>\r\n                        <span>vs</span>\r\n                        <br/>\r\n\r\n\r\n                        {/* Player 2 */}\r\n\r\n                        {match.p[1] <= 0 ? \r\n                            (match.id.r <= 1) ? \r\n                                (match.p[1] < 0) ?\r\n                                    <span style={{color:\"grey\"}}> BYE </span>\r\n                                    : \r\n                                    <span style={{color:\"grey\"}}> loser of match # {(match.id.s-1).toString()}{match.id.r}{(match.id.m + (match.id.m - 1) )} </span>\r\n                                :    \r\n                                <span style={{color:\"grey\"}}> loser of match # {(match.id.s-1).toString()}{match.id.r}{(match.id.m + (match.id.m - 1) )} </span>\r\n                            :\r\n                            <span> #{match.p[1]} {players[match.p[1]]} {score[1]} </span>\r\n                        }\r\n\r\n                        <hr/>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DisplayBracket","import React, {useState} from 'react';\nimport {Link} from '@reach/router';\nimport Popup from 'reactjs-popup';\n\nconst regForm = props => {\n\n    return (\n        <>\n        <h3>Register</h3>\n\n        <Popup trigger = {<button>Here</button>} position = \"top center\" modal closeOnDocumentClick>\n            {close =>(\n                <>\n                {/* <form onSubmit = {(event) => {onSubmit(event, match.id, Number(player1), Number(player2)); close()}}>\n                    <div style ={{color:\"black\"}} className=\"header\">Enter Score for match #{match.id.s}{match.id.r}{match.id.m}</div>\n                    <label style ={{color:\"black\"}}># {match.p[0]} {players[match.p[0]]} : </label>\n                    <input type = \"number\" name = \"player1\" onChange={(e) => { setPlayer1(e.target.value) }}></input>\n                    <br></br>\n                    <label style ={{color:\"black\"}}># {match.p[1]} {players[match.p[1]]} : </label>\n                    <input type = \"number\" name = \"player2\" onChange={(e) => { setPlayer2(e.target.value) }}></input>\n                    <br></br>\n                    <button>Submit</button>\n                </form> */}\n                <button onClick = {close}>Cancel</button>\n                </>\n            )}\n            \n        </Popup>\n        </>\n\n    )\n\n}\n\nexport default regForm","import React from 'react';\nimport {Link} from '@reach/router';\nimport RegistrationForm from '../components/registrationForm';\n\n\nconst displayRegForm = props => {\n\n    return (\n        <RegistrationForm/>\n    )\n\n}\n\nexport default displayRegForm","import React from 'react';\nimport {Router, Redirect} from '@reach/router';\nimport './App.css';\nimport DisplayBracket from './components/displayBracket';\nimport SingleElimDisplayBracket from './components/singleElimBracket';\nimport DisplayRegForm from './views/displayRegForm';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>PlaceHolder for Navbar Component</h2>\n      </header>\n        <Router>\n          <DisplayRegForm path = '/registration'/>\n          <DisplayBracket path = \"/double\"/>\n          <SingleElimDisplayBracket path = '/single' default/>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}